version: '3'
services:
    strapi:
        container_name: strapi
        build:
            context: ./strapi
        restart: unless-stopped
        env_file: ./strapi/.env
        environment:
            DATABASE_CLIENT: ${DATABASE_CLIENT}
            DATABASE_HOST: strapiDB
            DATABASE_NAME: ${DATABASE_NAME}
            DATABASE_USERNAME: ${DATABASE_USERNAME}
            DATABASE_PORT: ${DATABASE_PORT}
            JWT_SECRET: ${JWT_SECRET}
            ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
            DATABASE_PASSWORD: ${DATABASE_PASSWORD}
            NODE_ENV: ${NODE_ENV}
        volumes:
            - ./strapi/config:/opt/strapi/config
            - ./strapi/src:/opt/strapi/src
            - ./strapi/package.json:/opt/package.json
            - ./strapi/package-lock.json:/opt/package-lock.json
            - ./strapi/.env:/opt/strapi/.env
        ports:
            - '1337:1337'
        networks:
            - strapi
        depends_on:
            - strapiDB

    strapiDB:
        image: postgres:12.0-alpine
        container_name: strapiDB
        platform: linux/amd64 #for platform error on Apple M1 chips
        restart: unless-stopped
        env_file: ./strapi/.env
        environment:
            POSTGRES_USER: ${DATABASE_USERNAME}
            POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
            POSTGRES_DB: ${DATABASE_NAME}
        volumes:
            - strapi-data:/var/lib/postgresql/data/ #using a volume
            #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder
        ports:
            - '5432:5432'
        networks:
            - strapi

volumes:
    strapi-data:

networks:
    strapi:
        name: Strapi
        driver: bridge
